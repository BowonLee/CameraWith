Index: app/src/main/java/com/bowonlee/dearphotograph/BasePhotoDrawerView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bowonlee/dearphotograph/BasePhotoDrawerView.java	(revision 073a9b5e432d76c4a7df2ee64ddb42f33fb78a8d)
+++ app/src/main/java/com/bowonlee/dearphotograph/BasePhotoDrawerView.java	(revision 073a9b5e432d76c4a7df2ee64ddb42f33fb78a8d)
@@ -0,0 +1,127 @@
+package com.bowonlee.dearphotograph;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.Xfermode;
+import android.net.Uri;
+import android.provider.MediaStore;
+import android.util.Log;
+import android.util.Size;
+import android.view.View;
+
+import com.bowonlee.dearphotograph.models.ModifiedPhoto;
+import com.bowonlee.dearphotograph.models.Photo;
+
+import java.io.IOException;
+
+public class BasePhotoDrawerView extends View{
+
+    protected ModifiedPhoto mModifiedPhoto;
+    protected Bitmap mPhotoBitmap;
+
+    private int rotateDegree = 0;
+
+    public BasePhotoDrawerView(Context context){
+        super(context);
+    }
+    public BasePhotoDrawerView(Context context, ModifiedPhoto photo){
+        super(context);
+        mModifiedPhoto = photo;
+
+    }
+
+    public void setPhoto(ModifiedPhoto photo){
+        mModifiedPhoto = photo;
+    }
+
+    public ModifiedPhoto getModifiedPhoto(){
+        return mModifiedPhoto;
+    }
+
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        super.onDraw(canvas);
+        if(mModifiedPhoto != null){
+            Paint paint = new Paint();
+            setPhotoBitmap();
+            canvas.rotate(rotateDegree,
+                    mModifiedPhoto.getStartXY().x+mPhotoBitmap.getWidth()/2,mModifiedPhoto.getStartXY().y+mPhotoBitmap.getHeight()/2);
+            canvas.drawBitmap(mPhotoBitmap,mModifiedPhoto.getStartXY().x,mModifiedPhoto.getStartXY().y,paint);
+
+
+        }else{
+        }
+    }
+
+
+    protected void setCanvasRotate(int degree){
+        this.rotateDegree = degree;
+    }
+
+    protected void setPhotoBitmap(){
+        mPhotoBitmap = resizedBitmapFromUri(mModifiedPhoto.getImageUri(),mModifiedPhoto.getRatio());
+
+    }
+
+    private Bitmap resizedBitmapFromUri(Uri res, float ratio) {
+
+        Bitmap result;
+        int width ;
+        int height ;
+        // First decode with inJustDecodeBounds=true to check dimensions
+        final BitmapFactory.Options options = new BitmapFactory.Options();
+        options.inJustDecodeBounds = true;
+
+        BitmapFactory.decodeFile(res.getPath(),options);
+
+        width = (int) (options.outWidth*ratio);
+        height = (int) (options.outHeight*ratio);
+
+        // Calculate inSampleSize
+        options.inSampleSize = calculateInSampleSize(options, width, height);
+
+
+        // Decode bitmap with inSampleSize set
+        options.inJustDecodeBounds = false;
+        result = BitmapFactory.decodeFile(res.getPath(),options);
+
+        return result;
+
+
+    }
+
+    private int calculateInSampleSize(
+            BitmapFactory.Options options, int reqWidth, int reqHeight) {
+        // Raw height and width of image
+        final int height = options.outHeight;
+        final int width = options.outWidth;
+        int inSampleSize = 1;
+
+        if (height > reqHeight || width > reqWidth) {
+
+            final int halfHeight = height / 2;
+            final int halfWidth = width / 2;
+
+            // Calculate the largest inSampleSize value that is a power of 2 and keeps both
+            // height and width larger than the requested height and width.
+            while ((halfHeight / inSampleSize) >= reqHeight
+                    && (halfWidth / inSampleSize) >= reqWidth) {
+                inSampleSize *= 2;
+            }
+        }
+        Log.e("insampleSize"," is : "+inSampleSize);
+        return inSampleSize;
+    }
+
+
+
+
+}
Index: app/src/main/java/com/bowonlee/dearphotograph/ImageSaver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bowonlee/dearphotograph/ImageSaver.java	(revision dd24867c5e3b2a53dfc4bee429c00a0c4698918a)
+++ app/src/main/java/com/bowonlee/dearphotograph/ImageSaver.java	(revision 073a9b5e432d76c4a7df2ee64ddb42f33fb78a8d)
@@ -32,8 +32,6 @@
 
     interface OnMImageSaveListener {
         void onSaveImageComplete(File mFile);
-
-        void onTestListenter();
     }
 
     private OnMImageSaveListener mImageSaveListener;
Index: app/src/main/java/com/bowonlee/dearphotograph/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bowonlee/dearphotograph/MainActivity.java	(revision dd24867c5e3b2a53dfc4bee429c00a0c4698918a)
+++ app/src/main/java/com/bowonlee/dearphotograph/MainActivity.java	(revision 073a9b5e432d76c4a7df2ee64ddb42f33fb78a8d)
@@ -48,7 +48,7 @@
 
     private static final int REQUEST_CAMERA_PERMISSION = 1;
 
-    private ImageView mImageView;
+
     private Button mTakePictureButton;
     private Button mOpenGallaryButton;
     private Button mFinishAppButton;
@@ -66,7 +66,6 @@
     private FragmentManager mFragmentManager;
     private FragmentTransaction mFragmentTransaction;
 
-    private DrawPhotoFrameView mDrawPhotoFrameView;
 
 
     @Override
@@ -78,7 +77,6 @@
         mFileIOHelper = new FileIOHelper();
         mFileIOHelper.getAlbumStorageDir(ALBUMNAME);
 
-        mImageView = (ImageView)findViewById(R.id.imageview);
 
        mTakePictureButton = (Button)findViewById(R.id.btn_take_picture);
         mOpenGallaryButton = (Button)findViewById(R.id.btn_open_gallary);
@@ -94,9 +92,6 @@
         mSensorOrientation = new OrientationHelper();
         mSensorOrientation.setOnOrientationListener(this);
 
-        // 가져온 사진이 그려지는 객체
-   //     mDrawPhotoFrameView = new DrawPhotoFrameView(this);
-    //    addContentView(mDrawPhotoFrameView,new ActionBar.LayoutParams(ActionBar.LayoutParams.WRAP_CONTENT, ActionBar.LayoutParams.WRAP_CONTENT));
 
     }
 
@@ -128,7 +123,7 @@
         setSensors();
         setSensorListener();
 
-        Log.e("ImageLocate",String.format("(%d,%d)",mImageView.getWidth(),mImageView.getHeight()));
+
 
     }
 
@@ -220,7 +215,7 @@
         mOpenGallaryButton.setRotation(roation);
         mFinishAppButton.setRotation(roation);
         mTakePictureButton.setRotation(roation);
-        mImageView.setRotation(roation);
+
     }
 
 
@@ -278,7 +273,6 @@
 
 
 
-
     public void setmImageView(Photo photo){
 
         final BitmapFactory.Options options = new BitmapFactory.Options();
@@ -288,10 +282,7 @@
         options.inJustDecodeBounds = false;
 
 
-        Bitmap bitmap = BitmapFactory.decodeFile(photo.getImageUri().getPath(),options);
-        mImageView.setX(100f);
-        mImageView.setY(100f);
-        mImageView.setImageBitmap(bitmap);
+
 
 
     }
Index: app/src/main/java/com/bowonlee/dearphotograph/models/ModifiedPhoto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bowonlee/dearphotograph/models/ModifiedPhoto.java	(revision dd24867c5e3b2a53dfc4bee429c00a0c4698918a)
+++ app/src/main/java/com/bowonlee/dearphotograph/models/ModifiedPhoto.java	(revision 073a9b5e432d76c4a7df2ee64ddb42f33fb78a8d)
@@ -6,7 +6,7 @@
 
 
 /*
-* 사진 수정을 거친 후의 사진 데이터
+* 사진 수정 단계을 거친 후의 사진 데이터
 * 원본 사진에 비해 축소된 비율과 그려져야 할 시작 좌표를 추가한다.
 * */
 public class ModifiedPhoto extends Photo{
Index: app/src/main/java/com/bowonlee/dearphotograph/modify/ModifyPhotoActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bowonlee/dearphotograph/modify/ModifyPhotoActivity.java	(revision dd24867c5e3b2a53dfc4bee429c00a0c4698918a)
+++ app/src/main/java/com/bowonlee/dearphotograph/modify/ModifyPhotoActivity.java	(revision 073a9b5e432d76c4a7df2ee64ddb42f33fb78a8d)
@@ -4,15 +4,14 @@
 import android.content.Intent;
 import android.graphics.Point;
 import android.os.Bundle;
-import android.os.PersistableBundle;
 import android.support.annotation.Nullable;
 import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
-import android.util.Size;
 import android.view.View;
 import android.widget.Button;
 import android.widget.FrameLayout;
 
+import com.bowonlee.dearphotograph.BasePhotoDrawerView;
 import com.bowonlee.dearphotograph.R;
 import com.bowonlee.dearphotograph.models.ModifiedPhoto;
 import com.bowonlee.dearphotograph.models.Photo;
@@ -35,10 +34,14 @@
     private Button cropPhotoButton;
     private Button rotatePhotoButton;
 
-    private ModifyPhotoView modifyPhotoView;
+    private BasePhotoDrawerView basePhotoDrawerView;
+    private ModifyPhotoView mModifyPhotoView;
     private ModifiedPhoto modifiedPhoto;
 
     private FrameLayout mContainer;
+
+    private int rotation;
+
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -54,8 +57,8 @@
 
         mContainer = (FrameLayout)findViewById(R.id.container_modifier);
 
-        modifyPhotoView = new ModifyPhotoView(this);
-        addContentView(modifyPhotoView,new ActionBar.LayoutParams(ActionBar.LayoutParams.WRAP_CONTENT, ActionBar.LayoutParams.WRAP_CONTENT));
+        mModifyPhotoView = new ModifyPhotoView(this);
+        addContentView(mModifyPhotoView,new ActionBar.LayoutParams(ActionBar.LayoutParams.WRAP_CONTENT, ActionBar.LayoutParams.WRAP_CONTENT));
         getExtras();
     }
 
@@ -68,7 +71,7 @@
         modifiedPhoto.setStartXY(new Point(100,100));
         modifiedPhoto.setRatio((float) 0.5);
 
-        modifyPhotoView.setPhoto(modifiedPhoto);
+        mModifyPhotoView.setPhoto(modifiedPhoto);
     }
     //720,1280
     @Override
@@ -78,7 +81,7 @@
 
 
         Log.e("width,height",String.format("(%d,%d)",mContainer.getWidth(),mContainer.getHeight()));
-        modifyPhotoView.postInvalidate();
+        mModifyPhotoView.postInvalidate();
 
     }
 
@@ -92,10 +95,17 @@
         switch (v.getId()){
             case R.id.btn_modify_complete : {}break;
             case R.id.btn_modify_crop : {}break;
-            case R.id.btn_modify_rotate : {}break;
+            case R.id.btn_modify_rotate : {rotatePhoto();}break;
         }
     }
 
+    public void rotatePhoto(){
+        // 누를 때 마다 시계방향으로 회전
+        rotation +=90;
+        mModifyPhotoView.setrotation(rotation%360);
+        mModifyPhotoView.postInvalidate();
+
+    }
     private void hideUi(){
         getWindow().getDecorView().setSystemUiVisibility(
                 View.SYSTEM_UI_FLAG_LAYOUT_STABLE
Index: app/src/main/java/com/bowonlee/dearphotograph/modify/ModifyPhotoView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bowonlee/dearphotograph/modify/ModifyPhotoView.java	(revision dd24867c5e3b2a53dfc4bee429c00a0c4698918a)
+++ app/src/main/java/com/bowonlee/dearphotograph/modify/ModifyPhotoView.java	(revision 073a9b5e432d76c4a7df2ee64ddb42f33fb78a8d)
@@ -1,114 +1,31 @@
 package com.bowonlee.dearphotograph.modify;
 
 import android.content.Context;
-import android.content.res.Resources;
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.net.Uri;
-import android.provider.MediaStore;
-import android.util.Log;
-import android.util.Size;
-import android.view.View;
+import android.graphics.Point;
 
-import com.bowonlee.dearphotograph.models.ModifiedPhoto;
-import com.bowonlee.dearphotograph.models.Photo;
+import com.bowonlee.dearphotograph.BasePhotoDrawerView;
 
-import java.io.IOException;
+public class ModifyPhotoView extends BasePhotoDrawerView{
 
-public class ModifyPhotoView extends View{
+    public void movePhotoXY(int x, int y){
+        mModifiedPhoto.setStartXY(new Point(x,y));
+    }
 
-    private ModifiedPhoto photo;
-    private Bitmap bitmap;
-    private Context context;
+    public void setrotation(int rotate){
+        setCanvasRotate(rotate);
+    }
 
-    public ModifyPhotoView(Context context){
+    public ModifyPhotoView(Context context) {
         super(context);
-        this.context = context;
-    }
-    public ModifyPhotoView(Context context,ModifiedPhoto photo){
-        super(context);
-        this.photo = photo;
-        this.context = context;
-
-    }
-    public void setPhoto(ModifiedPhoto photo){
-        this.photo = photo;
     }
 
 
     @Override
     protected void onDraw(Canvas canvas) {
         super.onDraw(canvas);
-        if(photo != null){
-            Paint paint = new Paint();
-            canvas.drawBitmap(decodeSampledBitmapFromUri(photo.getImageUri(),photo.getRatio()),photo.getStartXY().x,photo.getStartXY().y,paint);
-        }else{
-
-        }
-    }
 
 
-    private Bitmap decodeSampledBitmapFromUri(Uri res, float ratio) {
-
-        Bitmap result;
-        int width ;
-        int height ;
-        // First decode with inJustDecodeBounds=true to check dimensions
-        final BitmapFactory.Options options = new BitmapFactory.Options();
-        options.inJustDecodeBounds = true;
-
-        BitmapFactory.decodeFile(res.getPath(),options);
-
-        width = (int) (options.outWidth*ratio);
-        height = (int) (options.outHeight*ratio);
-
-        // Calculate inSampleSize
-        options.inSampleSize = calculateInSampleSize(options, width, height);
-        Log.e("size before out",String.format("(%d,%d)",options.outWidth,options.outHeight));
-
-        // Decode bitmap with inSampleSize set
-        options.inJustDecodeBounds = false;
-        result = BitmapFactory.decodeFile(res.getPath(),options);
-        Log.e("size after out",String.format("(%d,%d)",options.outWidth,options.outHeight));
-
-        Log.e("size after",String.format("(%d,%d)",width,height));
-        return result;
-
 
     }
-
-    private int calculateInSampleSize(
-            BitmapFactory.Options options, int reqWidth, int reqHeight) {
-        // Raw height and width of image
-        final int height = options.outHeight;
-        final int width = options.outWidth;
-        int inSampleSize = 1;
-
-        if (height > reqHeight || width > reqWidth) {
-
-            final int halfHeight = height / 2;
-            final int halfWidth = width / 2;
-
-            // Calculate the largest inSampleSize value that is a power of 2 and keeps both
-            // height and width larger than the requested height and width.
-            while ((halfHeight / inSampleSize) >= reqHeight
-                    && (halfWidth / inSampleSize) >= reqWidth) {
-                inSampleSize *= 2;
-            }
-        }
-        Log.e("insampleSize"," is : "+inSampleSize);
-        return inSampleSize;
-    }
-
-
-
-
-    public ModifiedPhoto getModifiedPhoto(){
-        return photo;
-    }
-
-
-
 }
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision dd24867c5e3b2a53dfc4bee429c00a0c4698918a)
+++ app/src/main/res/layout/activity_main.xml	(revision 073a9b5e432d76c4a7df2ee64ddb42f33fb78a8d)
@@ -18,15 +18,7 @@
             android:background="#000"
             ></FrameLayout>
 
-        <ImageView
-            android:id="@+id/imageview"
-            android:layout_width="271dp"
-            android:layout_height="251dp"
-            android:layout_gravity="center"
-            android:adjustViewBounds="true"
-            android:background="@drawable/image_border"
-            android:scaleType="centerInside"
-            android:cropToPadding="true" />
+
 
         <Button
             android:id="@+id/btn_take_picture"
